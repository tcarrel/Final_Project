/**
 * \file shaders.h
 * \author glsl_to_c
 *
 *   Auto-generated header file containing code from all shadersused in this
 * program.  A list of the files used to generated this file can be found at
 * the bottom of this file.
 *
 * file generated by:     glsl_to_c
 *
 */



#ifndef  SHADER_TYPE_NAME
# define SHADER_TYPE_NAME _shader_code ///< A macro is used for the typename
                                       ///< since it is automatically
                                       ///< generated by another program.
#endif

#ifndef  _SHADERS_H_
# define _SHADERS_H_

#include<GL/glew.h>
#include<SDL2/SDL.h>
#include<SDL2/SDL_opengl.h>

#include<GL/glu.h>
#include<GL/freeglut.h>

/** Container for shader code.
 *  Streamlines use of hard-coded shaders in OpenGL by allowing them to be
 *  in their own files with the use of syntactic highlighting.
 *
 */
struct _shader_code
{
  const GLchar* code; ///< Source text.
  const GLuint  size; ///< Number of characters in the source text.

/** Ctor.  Necessary because structs are stored as constants.
 *
 * param c C-string of the shader source code.
 * param s The number of characters in the shader source.
 */
  _shader_code( const GLchar* c, GLuint s ) : code(c), size(s)
  {}
};

/** From file:  simple.v.glsl
 */
const _shader_code SIMPLE_v(
  "#version 450 core\n"
  "out vec4 color;\n"
  "void main()\n"
  "{\n"
  "  gl_position = vec4( 0.0, 0.0, 0.5, 1.0 );\n"
  "}\n"
  ,
  94
);


/** From file:  simple.f.glsl
 */
const _shader_code SIMPLE_f(
  "#version 450 core\n"
  "out vec4 color;\n"
  "void main()\n"
  "{\n"
  "  color = vec4( 0.0, 0.8, 1.0, 1.0 );\n"
  "}\n"
  ,
  88
);



#endif /* _SHADERS_H_ */

//
// Summary of all files used for generation of this header:
//
// simple.v.glsl
// simple.f.glsl
//


